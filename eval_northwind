-- Active: 1665131827383@@127.0.0.1@3306@northwind


-------------------------------------1) Requêtes d'intérrogation sur la base NorthWind ----------------------------------


--1 - Liste des contacts français :
select CompanyName societe, ContactName contact, ContactTitle fonction, Phone telephone From customers 
WHERE Country = 'France';

--2 - Produits vendus par le fournisseur « Exotic Liquids » :
SELECT ProductName produit,UnitPrice prix from suppliers s
JOIN products p ON p.SupplierID=s.SupplierID
;

--3 - Nombre de produits vendus par les fournisseurs Français dans l’ordre décroissant :
SELECT CompanyName fournisseur,COUNT(*) AS 'nbre produits' FROM suppliers s 
JOIN products p ON p.SupplierID=s.SupplierID
WHERE Country ='France'
GROUP BY fournisseur
ORDER BY COUNT(*) DESC
;

-- 4 - Liste des clients Français ayant plus de 10 commandes :

SELECT CompanyName, COUNT(*) AS nombre_commandes
    FROM customers
    JOIN orders ON customers.CustomerID = orders.CustomerID
    --JOIN `order details` ON orders.OrderID = `order details`.OrderID
    WHERE customers.Country = "France" 
    GROUP BY CompanyName
    HAVING COUNT(*) > 10
    ;

-- 5 - Liste des clients ayant un chiffre d’affaires > 30.000 :

SELECT CompanyName AS "clients", SUM(`order details`.unitPrice * `order details`.Quantity) AS CA, Country as "Country"
    FROM customers
    JOIN orders ON customers.CustomerID = orders.CustomerID
    JOIN `order details` ON orders.OrderID = `order details`.OrderID 
    GROUP BY CompanyName 
    HAVING CA > 30000
    ORDER BY CA DESC
    ;

-- 6 – Liste des pays dont les clients ont passé commande de produits fournis par « Exotic Liquids » :



    SELECT customers.Country AS Pays
FROM customers
JOIN orders ON orders.CustomerID = customers.CustomerID
JOIN `order details` ON `order details`.OrderID = orders.OrderID
JOIN products ON products.ProductID = `order details`.ProductID
JOIN suppliers ON suppliers.SupplierID = products.SupplierID
WHERE suppliers.companyName = 'Exotic Liquids'
GROUP BY customers.Country ASC;

--7 – Montant des ventes de 1997 :

SELECT SUM(UnitPrice * Quantity) AS `Montant Ventes 97`
	FROM orders
    JOIN `order details` ON `order details`.OrderID = orders.OrderID
    WHERE YEAR(OrderDate) LIKE "1997";

--8 – Montant des ventes de 1997 mois par mois :

SELECT DISTINCT MONTH(OrderDate) AS MOIS, ROUND(SUM(`order details`.UnitPrice*`order details`.Quantity),2) AS `Montant Ventes 97` 
--  ROUND(mettre,2) pour deux chiffres après la virgule
	FROM orders
    JOIN `order details` ON `order details`.OrderID = orders.OrderID
    WHERE YEAR(OrderDate) IN (1997)
	GROUP BY MONTH(OrderDate);

--9 – Depuis quelle date le client « Du monde entier » n’a plus commandé ?

SELECT  OrderDate AS 'Date de la derniere commande'
    FROM customers
    JOIN orders ON customers.CustomerID = orders.CustomerID
    WHERE CompanyName LIKE 'Du monde entier'
    ORDER BY OrderDate DESC LIMIT 1;

-- 10 – Quel est le délai moyen de livraison en jours ?

SELECT ROUND(AVG(DATEDIFF(ShippedDate,OrderDate))) AS 'Delai moyen de livraison en jours'
    FROM orders;


-----------------------------------2) Procédures stockées ---------------------------------------


-- Codez deux procédures stockées correspondant aux requêtes 9 et 10. 
-- Les procédures stockées doivent prendre en compte les éventuels paramètres.


-- Requete 9


DROP PROCEDURE Derniere_commande;

DELIMITER |

CREATE PROCEDURE Derniere_commande()

BEGIN
SELECT  OrderDate AS 'Date de la derniere commande'
    FROM customers
    JOIN orders ON customers.CustomerID = orders.CustomerID
    WHERE CompanyName LIKE 'Du monde entier'
    ORDER BY OrderDate DESC LIMIT 1;
END |


DELIMITER ;

SHOW CREATE PROCEDURE Derniere_commande;

CALL Derniere_commande;

-- Requete 10


DROP PROCEDURE Delai_moyen_livraison;

DELIMITER |

CREATE PROCEDURE Delai_moyen_livraison()

BEGIN
    SELECT ROUND(AVG(DATEDIFF(ShippedDate,OrderDate))) AS 'Delai moyen de livraison en jours'
    FROM orders;

END |

DELIMITER ;

SHOW CREATE PROCEDURE Delai_moyen_livraison;

CALL Delai_moyen_livraison;


/*  3) Mise en place d'une règle de gestion

L'entreprise souhaite mettre en place cette règle de gestion:
Pour tenir compte des coûts liés au transport, on vérifiera que pour chaque produit d’une commande, le client réside dans le même pays que le fournisseur du même produit
Il s'agit d'interdire l'insertion de produits dans les commandes ne satisfaisants pas à ce critère.
Décrivez par quel moyen et avec quels outils (procédures stockées, trigger...) vous pourriez implémenter la règle de gestion suivante. */

DROP TRIGGER customers_suppliers_country;


DELIMITER |

CREATE TRIGGER customers_suppliers_country AFTER INSERT 
ON `order details` 
FOR EACH ROW 
BEGIN 
	IF (
	    SELECT DISTINCT orders.ShipCountry
	    FROM `order details`
        JOIN orders ON `order details`.OrderID = orders.OrderID
        WHERE orders.OrderID = NEW.OrderID
	) != (
	    SELECT suppliers.Country
	    FROM
	        `order details`
	        JOIN orders ON orders.OrderID = `order details`.OrderID
	        JOIN products ON `order details`.ProductID = products.ProductID
	        JOIN suppliers ON products.SupplierID = suppliers.SupplierID
	    WHERE
	        orders.OrderID = NEW.OrderID AND products.ProductId = NEW.ProductID
	) THEN 
	SIGNAL SQLSTATE '40000' SET MESSAGE_TEXT = "Il y a au moins 1 produit qui ne provient pas d'un pays étranger";
	END IF;
	END | 
DELIMITER ;



-- test

SELECT suppliers.Country
	    FROM
	        `order details`
	        JOIN orders ON orders.OrderID = `order details`.OrderID
	        JOIN products ON `order details`.ProductID = products.ProductID
	        JOIN suppliers ON products.SupplierID = suppliers.SupplierID
	    WHERE
	        orders.OrderID = 10248 AND products.ProductID = 11;

SELECT DISTINCT orders.ShipCountry
	    FROM `order details`
        JOIN orders ON `order details`.OrderID = orders.OrderID
        WHERE orders.OrderID = 10248;

INSERT INTO `order details`(OrderID, ProductID, UnitPrice, Quantity, Discount)
VALUES (10248, 35, 12.0000, 1, 0);





